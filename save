import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class Bookrental {

    static {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
        } catch (ClassNotFoundException cnfe) {
            cnfe.printStackTrace();
        }
    }

    Connection con;
    PreparedStatement pstmt1; // log
    PreparedStatement pstmt2; // sign
    PreparedStatement pstmt3; // list
    PreparedStatement pstmt4; // brent
    PreparedStatement pstmt5; // add
    PreparedStatement pstmt6; // BRENT
    PreparedStatement pstmt7; // rent
    ResultSet rs;
    Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {

        Bookrental bk = new Bookrental();
        bk.dolog();
    }

    private void connectDatabase() {

        try {
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "scott", "tiger");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void dolog() {

        connectDatabase();
        logMenue();
        int choice;
        System.out.print("선택 : ");
        choice = sc.nextInt();
        switch (choice) {
            case 1:
                login();
                break;
            case 2:
                signup();
                break;

            case 3:
                System.out.println("시스템을 종료합니다.");
                return;

            default:
                break;
        }

    }

    public void logMenue() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("[로그인 화면]");
        System.out.println("1. [   로그인  ] ");
        System.out.println("2. [  회원가입 ] ");
        System.out.println("3. [    종료   ] ");
        System.out.println("원하는 메뉴 번호를 선택해 주십시요");
        System.out.println("=================================================");
        System.out.println(" ");

    }

    public void login() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("ID와 PW를 입력해 주세요");
        sc.nextLine();
        System.out.print("ID : ");
        String ID = sc.nextLine();
        System.out.print("PW :");
        String PW = sc.nextLine();
        String sql = "select PW from USERINFO WHERE ID=? ";
        try {
            pstmt2 = con.prepareStatement(sql);
            pstmt2.setString(1, ID);
            rs = pstmt2.executeQuery();
            while (true) {

                if (rs.next()) {
                    if (rs.getString(1).contentEquals(PW)) {
                        System.out.println("로그인 되었습니다.");
                        rentMenu();
                        continue;

                    } else {
                        System.out.println("비밀번호가 틀립니다.");
                        login();
                        continue;
                    }
                }
                rs.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    public void signup() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("[회원가입]");
        sc.nextLine();
        System.out.print("ID : ");
        String ID = sc.nextLine();
        System.out.print("PW :");
        String PW = sc.nextLine();
        System.out.print("NAME :");
        String NAME = sc.nextLine();

        String sql = "insert into USERINFO values(?,?,?)";
        while (true) {
            try {
                pstmt1 = con.prepareStatement(sql);
                pstmt1.setString(1, ID);
                pstmt1.setString(2, PW);
                pstmt1.setString(3, NAME);
                int updateCount = pstmt1.executeUpdate();

                if (updateCount > 0) {
                    System.out.println("회원가입이 완료 되었습니다.");
                    dolog();
                    continue;
                } else {
                    System.out.println("다시 시도해 주세요.");
                    dolog();
                    continue;
                }

            } catch (SQLException sqle) {
                sqle.printStackTrace();
                System.out.println("중복된 아이디 입니다.");
                dolog();
                continue;
            }
        }

    }
    /////////

    public void showMenue() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("1. 대여");
        System.out.println("2. 반납");
        System.out.println("3. 연장");
        System.out.println("4. 도서 목록 조회");
        System.out.println("5. 도서 등록");
        System.out.println("6. 종료");
        System.out.println("원하는 메뉴 번호를 선택해 주십시요");
        System.out.println("=================================================");
    }

    public void rentMenu() {

        connectDatabase();
        showMenue();
        int choice;
        System.out.print("선택 : ");
        choice = sc.nextInt();
        while (true) {
            switch (choice) {
                case 1:
                    rent();
                    break;
                case 2:
                    returnBook();
                    break;

                case 3:
                    returnBook();
                    break;

                case 4:
                    returnBook();
                    break;

                case 5:
                    addbook();
                    break;

                case 6:
                    System.out.println("시스템을 종료합니다.");
                    return;

                default:
                    break;
            }
        }

    }

    public void rent() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("[대여]");
        sc.nextLine();
        System.out.print("1. 책번호 : ");
        String bookno = sc.nextLine();
        System.out.print("2. ID : ");
        String rentID = sc.nextLine();

        String sql = "insert into BOOKRENT values(?,?,sysdate,sysdate+7)"; //중복ID 대여 추가해야할 기능 권수 업데이트
        // String sql2 = "update BOOKRENT set
        // rentID=?,RENTDATE=SYSDATE,RETURNDATE=SYSDATE+7 WHERE Bookno=?";
        // String sql3 = "select bookno from BOOKRENT where bookno=?";
        // while (true) {
        try {
            // pstmt7 = con.prepareStatement(sql3);
            // pstmt7.setString(1, bookno);

            // pstmt6 = con.prepareStatement(sql2);
            // pstmt6.setString(1, rentID);
            // pstmt6.setString(2, bookno);
            // int updateCount2 = pstmt6.executeUpdate();

            pstmt4 = con.prepareStatement(sql);
            pstmt4.setString(1, bookno);
            pstmt4.setString(2, rentID);
            int updateCount = pstmt4.executeUpdate();
            // rs = pstmt7.executeQuery();

            // if (rs.next()) {
            // if (updateCount2 >= 1) {
            // System.out.println("대여 되었습니다.");

            // }
            // }

            if (updateCount >= 0) {
                System.out.println("대여 되었습니다.");

            }

            else {
                System.out.println("대여 중인 책입니다.");

            }

        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    // }

    public void returnBook() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("[반납]");
        sc.nextLine();
        System.out.print("1. 책번호 : ");
        String bookno = sc.nextLine();
        System.out.print("2. ID : ");
        String rentID = sc.nextLine();

        

    }

    public void enxtend() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("[대여]");
        sc.nextLine();
        System.out.print("1. 책번호 : ");
        String bookno = sc.nextLine();
        System.out.print("2. ID : ");
        String rentID = sc.nextLine();

    }

    public void selectAll() {
        System.out.println("");
        System.out.println("=================================================");
        System.out.println("[도서 목록]");

    }

    public void addbook() {

        System.out.println("");
        System.out.println("=================================================");
        System.out.println("[도서등록]");
        sc.nextLine();
        System.out.print("책번호 : ");
        String bookno = sc.nextLine();
        System.out.print("지은이 :");
        String author = sc.nextLine();
        System.out.print("책이름 :");
        String bookname = sc.nextLine();
        System.out.print("수량 :");
        String quantity = sc.nextLine();

        String sql = "insert into BookINFO values(?,?,?,?)";
        while (true) {
            try {
                pstmt5 = con.prepareStatement(sql);
                pstmt5.setString(1, bookno);
                pstmt5.setString(2, author);
                pstmt5.setString(3, bookname);
                pstmt5.setString(4, quantity);
                int updateCount = pstmt5.executeUpdate();

                if (updateCount > 0) {
                    System.out.println("도서등록이 완료 되었습니다.");
                    rentMenu();
                    continue;
                } else {
                    System.out.println("다시 시도해 주세요.");
                    addbook();
                    continue;
                }

            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("중복된 책번호 입니다.");
                addbook();
                continue;
            }
        }
    }
}
